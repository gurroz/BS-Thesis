// generated 2009/5/21 18:32:37 CLT by rvalenzu@rvalenzu-laptop.(none)
// using glademm V2.6.0
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /home/rvalenzu/zzzz/cppp/FaceMatcher.glade
// for gtk 2.12.9 and gtkmm 2.12.5
//
// Please modify the corresponding derived classes in ./src/GUIFaceMatcher.hh and./src/GUIFaceMatcher.cc

#ifndef _GUIFACEMATCHER_GLADE_HH
#  define _GUIFACEMATCHER_GLADE_HH

// Since all your widgets were private I made them all public.
// To differentiate between accessable (e.g. entries, output labels)
// and unaccessible widgets (e.g. static labels, containers)
// you should use the 'visibility' property (only visible in C++ mode)


#if !defined(GLADEMM_DATA)
#define GLADEMM_DATA
#include <gtkmm/accelgroup.h>

class GlademmData
{

        Glib::RefPtr<Gtk::AccelGroup> accgrp;
public:

        GlademmData(Glib::RefPtr<Gtk::AccelGroup> ag) : accgrp(ag)
        {
        }

        Glib::RefPtr<Gtk::AccelGroup>  getAccelGroup()
        {  return accgrp;
        }
};
#endif //GLADEMM_DATA

#include <gtkmm/window.h>
#include <gtkmm/scale.h>
#include <gtkmm/label.h>
#include <gtkmm/image.h>
#include <gtkmm/button.h>
#include <gtkmm/box.h>
#include <gtkmm/table.h>
#include <gtkmm/paned.h>
#include <gtkmm/alignment.h>
#include <gtkmm/buttonbox.h>
#include "ScalesForParameters.h"

class GUIFaceMatcher_glade : public Gtk::Window
{

        GlademmData *gmm_data;
public:
        class Gtk::Window * GUIFaceMatcher;
        class Gtk::VBox * vbox_zoom;
        class Gtk::HPaned * hboxDrawings;
        class Gtk::VScale * scale_z;
        class Gtk::HBox * hbox1;
        class Gtk::HScale * scale_x;
        class Gtk::Label * label_x;
        class Gtk::Label * label_y;
        class Gtk::HScale * scale_y;
        class Gtk::Table * table_xy;
        class Gtk::Label * label_rotx;
        class Gtk::Label * label_roty;
        class Gtk::Label * label_rotz;
        class Gtk::HScale * scale_rotz;
        class Gtk::HScale * scale_roty;
        class Gtk::HScale * scale_rotx;
        class Gtk::Table * table_xyz;
        class Gtk::Table * main_table;
        class Gtk::Image * image210;
        class Gtk::Button * button_add;
        class Gtk::VScale * vscale_zoom;
        class Gtk::Image * image211;
        class Gtk::Button * button_remove;

        class Gtk::Image * image6;
        class Gtk::Label * label6;
        class Gtk::HBox * hbox6;
        class Gtk::Alignment * alignment6;
        class Gtk::Button * open_configuration1;

        class Gtk::Image * image7;
        class Gtk::Label * label7;
        class Gtk::HBox * hbox7;
        class Gtk::Alignment * alignment7;
        class Gtk::Button * save_configuration1;

        class Gtk::Image * image2;
        class Gtk::Label * label2;
        class Gtk::HBox * hbox2;
        class Gtk::Alignment * alignment2;
        class Gtk::Button * button2;

        class Gtk::Image * image3;
        class Gtk::Label * label3;
        class Gtk::HBox * hbox3;
        class Gtk::Alignment * alignment3;
        class Gtk::Button * button3;

        class Gtk::HButtonBox * hbuttonbox1;
        class Gtk::VBox * vbox1;

        ScalesForParameters * parameters;
protected:
        GUIFaceMatcher_glade();
        ~GUIFaceMatcher_glade();
private:
        virtual void on_open_configuration1_activate() = 0;
        virtual void on_save_configuration1_activate() = 0;
        virtual void on_ok1_activate() = 0;
        virtual void on_quit1_activate() = 0;
};
#endif
