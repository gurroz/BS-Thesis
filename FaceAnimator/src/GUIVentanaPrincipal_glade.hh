// generated 2008/3/3 18:00:20 CLST by cristi@cristi-laptop.(none)
// using glademm V2.6.0
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /home/cristi/svn/CC69F/TreeGrowthSimulator.glade
// for gtk 2.10.11 and gtkmm 2.10.8
//
// Please modify the corresponding derived classes in ./src/GUIVentanaPrincipal.hh and./src/GUIVentanaPrincipal.cc

#ifndef _GUIVENTANAPRINCIPAL_GLADE_HH
#  define _GUIVENTANAPRINCIPAL_GLADE_HH

// Since all your widgets were private I made them all public.
// To differentiate between accessable (e.g. entries, output labels)
// and unaccessible widgets (e.g. static labels, containers)
// you should use the 'visibility' property (only visible in C++ mode)


#if !defined(GLADEMM_DATA)
#define GLADEMM_DATA
#include <gtkmm/accelgroup.h>

class GlademmData
{

        Glib::RefPtr<Gtk::AccelGroup> accgrp;
public:

        GlademmData(Glib::RefPtr<Gtk::AccelGroup> ag) : accgrp(ag)
        {
        }

        Glib::RefPtr<Gtk::AccelGroup>  getAccelGroup()
        {  return accgrp;
        }
};
#endif //GLADEMM_DATA

#include <gtkmm/window.h>
#include <gtkmm/tooltips.h>
#include <gtkmm/imagemenuitem.h>
#include <gtkmm/menuitem.h>
#include <gtkmm/menu.h>
#include <gtkmm/image.h>
#include <gtkmm/checkmenuitem.h>
#include <gtkmm/menubar.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#include <gtkmm/toolbutton.h>
#else //
#include <gtkmm/button.h>
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#include <gtkmm/separatortoolitem.h>
#endif //
#include <gtkmm/toolbar.h>
#include <gtkmm/box.h>
#include <gtkmm/alignment.h>
#include <gtkmm/label.h>
#include <gtkmm/frame.h>
#include <gtkmm/textview.h>
#include <gtkmm/scrolledwindow.h>
#include <gtkmm/statusbar.h>

class GUIVentanaPrincipal_glade : public Gtk::Window
{

        GlademmData *gmm_data;
public:
        Gtk::Tooltips _tooltips;
        class Gtk::Window * GUIVentanaPrincipal;
        class Gtk::ImageMenuItem * nuevo1;
        class Gtk::ImageMenuItem * abrir1;
        class Gtk::ImageMenuItem * guardar1;
        class Gtk::ImageMenuItem * guardar_como1;
        class Gtk::MenuItem * separatormenuitem1;
        class Gtk::ImageMenuItem * salir1;
        class Gtk::Menu * menuitem1_menu;
        class Gtk::MenuItem * menuitem1;
        class Gtk::ImageMenuItem * cortar1;
        class Gtk::ImageMenuItem * copiar1;
        class Gtk::ImageMenuItem * pegar1;
        class Gtk::ImageMenuItem * borrar1;
        class Gtk::Menu * menuitem2_menu;
        class Gtk::MenuItem * menuitem2;
        class Gtk::Image * image197;
        class Gtk::ImageMenuItem * distribuir_hormona1;
        class Gtk::MenuItem * separador5;
        class Gtk::Image * image198;
        class Gtk::ImageMenuItem * deformar1;
        class Gtk::Image * image199;
        class Gtk::ImageMenuItem * refinar1;
        class Gtk::Image * image200;
        class Gtk::ImageMenuItem * desrefinar1;
        class Gtk::Image * image201;
        class Gtk::ImageMenuItem * mejorar1;
        class Gtk::Image * image202;
        class Gtk::ImageMenuItem * triangular1;
        class Gtk::Image * image203;
        class Gtk::ImageMenuItem * cuadrangular1;
        class Gtk::MenuItem * separador4;
        class Gtk::Image * image204;
        class Gtk::ImageMenuItem * informacion1;
        class Gtk::Menu * malla1_menu;
        class Gtk::MenuItem * malla1;
        class Gtk::CheckMenuItem * mostrar_caras1;
        class Gtk::CheckMenuItem * mostrar_arcos1;
        class Gtk::CheckMenuItem * mostrar_colores_segun_concentracion1;
        class Gtk::CheckMenuItem * mostrar_todos_los_frames1;
        class Gtk::MenuItem * separador3;
        class Gtk::Image * image205;
        class Gtk::ImageMenuItem * enlentecer_animacion1;
        class Gtk::Image * image206;
        class Gtk::ImageMenuItem * detener_animacion1;
        class Gtk::Image * image207;
        class Gtk::ImageMenuItem * pausar_animacion1;
        class Gtk::Image * image208;
        class Gtk::ImageMenuItem * iniciar_animacion1;
        class Gtk::Image * image209;
        class Gtk::ImageMenuItem * apurar_animacion1;
        class Gtk::Menu * menuitem3_menu;
        class Gtk::MenuItem * menuitem3;
        class Gtk::ImageMenuItem * acerca_de1;
        class Gtk::Menu * menuitem4_menu;
        class Gtk::MenuItem * menuitem4;
        class Gtk::MenuBar * menubar1;
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
        class Gtk::ToolButton * toolbuttonNuevo;
#else //
        class Gtk::Button * toolbuttonNuevo;
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
        class Gtk::ToolButton * toolbuttonAbrir;
#else //
        class Gtk::Button * toolbuttonAbrir;
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
        class Gtk::ToolButton * toolbuttonGuardar;
#else //
        class Gtk::Button * toolbuttonGuardar;
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
        class Gtk::SeparatorToolItem * separatortoolitem1;
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
        class Gtk::ToolButton * toolbuttonDeformar;
#else //
        class Gtk::Button * toolbuttonDeformar;
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
        class Gtk::ToolButton * toolbuttonRefinar;
#else //
        class Gtk::Button * toolbuttonRefinar;
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
        class Gtk::ToolButton * toolbuttonDesrefinar;
#else //
        class Gtk::Button * toolbuttonDesrefinar;
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
        class Gtk::ToolButton * toolbuttonMejorar;
#else //
        class Gtk::Button * toolbuttonMejorar;
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
        class Gtk::ToolButton * toolbuttonTriangular;
#else //
        class Gtk::Button * toolbuttonTriangular;
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
        class Gtk::ToolButton * toolbuttonCuadrangular;
#else //
        class Gtk::Button * toolbuttonCuadrangular;
#endif //
        class Gtk::Toolbar * toolbar1;
        class Gtk::VBox * vboxDrawingArea;
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
        class Gtk::ToolButton * toolbuttonEnlentecer;
#else //
        class Gtk::Button * toolbuttonEnlentecer;
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
        class Gtk::ToolButton * toolbuttonDetenerAnimacion;
#else //
        class Gtk::Button * toolbuttonDetenerAnimacion;
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
        class Gtk::ToolButton * toolbuttonPausarAnimacion;
#else //
        class Gtk::Button * toolbuttonPausarAnimacion;
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
        class Gtk::ToolButton * toolbuttonIniciarAnimacion;
#else //
        class Gtk::Button * toolbuttonIniciarAnimacion;
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
        class Gtk::ToolButton * toolbuttonApurar;
#else //
        class Gtk::Button * toolbuttonApurar;
#endif //
        class Gtk::Toolbar * toolbarControlesAnimacion;
        class Gtk::VBox * vboxVisualizador;
        class Gtk::Alignment * alignmentVisualizador;
        class Gtk::Label * label1;
        class Gtk::Frame * frame1;
        class Gtk::TextView * textviewLog;
        class Gtk::ScrolledWindow * scrolledwindow1;
        class Gtk::Alignment * alignment2;
        class Gtk::Label * label2;
        class Gtk::Frame * frame2;
        class Gtk::Statusbar * statusbar1;
        class Gtk::VBox * vbox1;
protected:

        GUIVentanaPrincipal_glade();

        ~GUIVentanaPrincipal_glade();
private:
        virtual void on_nuevo1_activate() = 0;
        virtual void on_abrir1_activate() = 0;
        virtual void on_guardar1_activate() = 0;
        virtual void on_guardar_como1_activate() = 0;
        virtual void on_salir1_activate() = 0;
        virtual void on_cortar1_activate() = 0;
        virtual void on_copiar1_activate() = 0;
        virtual void on_pegar1_activate() = 0;
        virtual void on_borrar1_activate() = 0;
        virtual void on_deformar1_activate() = 0;
        virtual void on_refinar1_activate() = 0;
        virtual void on_desrefinar1_activate() = 0;
        virtual void on_mejorar1_activate() = 0;
        virtual void on_triangular1_activate() = 0;
        virtual void on_cuadrangular1_activate() = 0;
        virtual void on_informacion1_activate() = 0;
        virtual void on_mostrar_caras1_activate() = 0;
        virtual void on_mostrar_arcos1_activate() = 0;
        virtual void on_mostrar_colores_segun_concentracion1_activate() = 0;
        virtual void on_mostrar_todos_los_frames1_activate() = 0;
        virtual void on_enlentecer_animacion1_activate() = 0;
        virtual void on_detener_animacion1_activate() = 0;
        virtual void on_pausar_animacion1_activate() = 0;
        virtual void on_iniciar_animacion1_activate() = 0;
        virtual void on_apurar_animacion1_activate() = 0;
        virtual void on_acerca_de1_activate() = 0;
        virtual void on_toolbuttonNuevo_clicked() = 0;
        virtual void on_toolbuttonAbrir_clicked() = 0;
        virtual void on_toolbuttonGuardar_clicked() = 0;
};
#endif
